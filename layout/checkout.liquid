<!-- Modified by himanshi on Feb 16,2021 -->

<!DOCTYPE html>
<html lang="{{ locale }}" dir="{{ direction }}" class="{{ checkout_html_classes }}">

<head>{% include 'moe.liquid' %}
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport"
        content="width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, user-scalable=0">
  <meta name="referrer" content="origin">
  <!-- Google Tag Manager -->
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
              new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
            'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-KNW4PFG');</script>
  <script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <!-- End Google Tag Manager -->
  <title>{{ page_title }}</title>

  <!-- webengage starts -->
  <script id='_webengage_script_tag' type='text/javascript'>
    var webengage;!function(w,e,b,n,g){function o(e,t){e[t[t.length-1]]=function(){r.__queue.push([t.join("."),
      arguments])}}var i,s,r=w[b],z=" ",l="init options track screen onReady".split(z),a="feedback survey notification".split(z),c="options render clear abort".split(z),p="Open Close Submit Complete View Click".split(z),u="identify login logout setAttribute".split(z);if(!r||!r.__v){for(w[b]=r={__queue:[],__v:"6.0",user:{}},i=0;i < l.length;i++)o(r,[l[i]]);for(i=0;i < a.length;i++){for(r[a[i]]={},s=0;s < c.length;s++)o(r[a[i]],[a[i],c[s]]);for(s=0;s < p.length;s++)o(r[a[i]],[a[i],"on"+p[s]])}for(i=0;i < u.length;i++)o(r.user,["user",u[i]]);setTimeout(function(){var f=e.createElement("script"),d=e.getElementById("_webengage_script_tag");f.type="text/javascript",f.async=!0,f.src=("https:"==e.location.protocol?"https://ssl.widgets.webengage.com":"http://cdn.widgets.webengage.com")+"/js/webengage-min-v-6.0.js",d.parentNode.insertBefore(f,d)})}}(window,document,"webengage");webengage.init("14507cc8d");
  </script>
  <!-- webengage ends -->

  <!-- Start VWO Async SmartCode -->
  <script type='text/javascript'>
    window._vwo_code = window._vwo_code || (function(){
      var account_id=519155,
              settings_tolerance=2000,
              library_tolerance=2500,
              use_existing_jquery=false,
              is_spa=1,
              hide_element='body',

              /* DO NOT EDIT BELOW THIS LINE */
              f=false,d=document,code={use_existing_jquery:function(){return use_existing_jquery;},library_tolerance:function(){return library_tolerance;},finish:function(){if(!f){f=true;var a=d.getElementById('_vis_opt_path_hides');if(a)a.parentNode.removeChild(a);}},finished:function(){return f;},load:function(a){var b=d.createElement('script');b.src=a;b.type='text/javascript';b.innerText;b.onerror=function(){_vwo_code.finish();};d.getElementsByTagName('head')[0].appendChild(b);},init:function(){
                  window.settings_timer=setTimeout(function () {_vwo_code.finish() },settings_tolerance);var a=d.createElement('style'),b=hide_element?hide_element+'{opacity:0 !important;filter:alpha(opacity=0) !important;background:none !important;}':'',h=d.getElementsByTagName('head')[0];a.setAttribute('id','_vis_opt_path_hides');a.setAttribute('type','text/css');if(a.styleSheet)a.styleSheet.cssText=b;else a.appendChild(d.createTextNode(b));h.appendChild(a);this.load('https://dev.visualwebsiteoptimizer.com/j.php?a='+account_id+'&u='+encodeURIComponent(d.URL)+'&f='+(+is_spa)+'&r='+Math.random());return settings_timer; }};window._vwo_settings_timer = code.init(); return code; }());
  </script>
  <!-- End VWO Async SmartCode -->

  <!-- Start User Insights Script -->
  <script>UST_CT = [];UST = { s: Date.now(), addTag: function(tag) { UST_CT.push(tag) } };UST.addEvent = UST.addTag;</script>
  <script src="https://insights.d2c.tools/server/ust.min.js?v=3.5.3" async></script>
  <!-- End User Insights Script -->

  <style>
    .upsell-container{
      background: #FDF7F5 !important;
    }
    .upsell-offer-grab{
      background: rgb(1, 56, 94) !important;
      color: white !important;
    }
  </style>
  <style>
    .barecash_text{
      padding: 0 0 1em 0;
      color: #1990c6;
    }
    .loader-text {
      padding: 0.5em;
      font-weight: bold;
      color: #1990c6;
      font-size: 15px;
    }
    .loader-icon{
      padding: 0 0.5em 0 0;
    }

    .desktop_barecash_txt{
      cursor         : pointer;
      text-decoration: underline;
      color          : #1990c6;
      display        : none;
      padding        : 1rem 0;
    }

    @media only screen and (max-width: 600px) {
      .barecash_text{
        display: block !important;
      }
    }

    @media only screen and (min-width: 768px) {
      .barecash_text{
        display: none !important;
      }
      .desktop_barecash_txt{
        display : block !important;
      }
    }
  </style>

{%- assign order_date = order.created_at | time_tag: format: "date_at_time" -%}
  {%- assign final_d = order_date | split:'datetime="' | last -%}
  {%- assign or_final_d = final_d | split:'"' | first -%}
<script>
window.addEventListener("MOE_LIFECYCLE",function(e){
      if(e.detail.name === "SDK_INITIALIZED"){
        Moengage.add_user_attribute("Last_Purchase_Date", "{{ or_final_d }}");
      }
    })
    </script>



  <script>
    {% assign discountCode = discount.title %}

dataLayer.push({ ecommerce: null }); 
dataLayer.push({
  event: "purchase",
  ecommerce: {
        'send_to':'GTM-MRZ7VBM4',
        "transaction_id": '{{ order.name }}',
        "affiliation": "innovist",
        "value": {{ order.total_price | divided_by: 100.0 }},
        "currency": 'INR',
        "tax": {{ order.tax_price | divided_by: 100.0 }},
        "shipping": {{ order.shipping_price | divided_by: 100.0 }},
        "items": [{% for line_item in order.line_items %}{
          "item_id": '{{ line_item.product_id }}',
          "item_sku": '{{ line_item.sku }}',
          "item_brand": "{{ line_item.vendor }}",
          "coupon": "{{discountCode}}",
          "item_name": '{{ line_item.title }}',
          "item_variant": '{{ line_item.variant_id }}',
          "item_category": "",
          "item_category2": "",
          "item_category3": "",
          "item_category4": "",
          "item_category5": "",
          "quantity": {{ line_item.quantity }},
          "price": {{ line_item.final_price | divided_by: 100.0 }},
          "index": {{forloop.index}},
          "item_variant": "{{line_item.variant.title}}",
          "discount": {{ line_item.line_level_total_discount | divided_by: 100.0 }}
        }{% unless forloop.last %},{% endunless %}{% endfor %}]
}
      });
  </script>

  

  <!-- Snap Pixel Code -->
  <!-- End Snap Pixel Code -->
  <!-- Google Tag Manager -->
  <!--<script>(function (w, d, s, l, i) {
      w[l] = w[l] || []; w[l].push({
        'gtm.start':
          new Date().getTime(), event: 'gtm.js'
      }); var f = d.getElementsByTagName(s)[0],
        j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
          'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
    })(window, document, 'script', 'dataLayer', 'GTM-KNW4PFG');</script>-->
  <!-- End Google Tag Manager -->
  <!-- Global site tag (gtag.js) - Google Ads: 757323907 -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=AW-757323907"></script>
  <script> window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag('js', new Date()); gtag('config', 'AW-757323907'); </script>
  {{ content_for_header }}

  {{ checkout_stylesheets }}
  {{ checkout_scripts }}
</head>

<body>

<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KNW4PFG"
                  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
{{ skip_to_content_link }}

<header class="banner" data-header role="banner">
  <div class="wrap">
    {{ content_for_logo }}
  </div>
</header>

{{ order_summary_toggle }}
<div class="content" data-content>
  <div class="wrap">
    <div class="main">
      <header class="main__header" role="banner">
        {{ content_for_logo }}
        {{ breadcrumb }}
        {{ alternative_payment_methods }}
      </header>
      <main class="main__content" role="main">
        {{ content_for_layout }}
      </main>
      <footer class="main__footer" role="contentinfo">
        {{ content_for_footer }}
      </footer>
    </div>
    <aside class="sidebar" role="complementary">
      <div class="sidebar__header">
        {{ content_for_logo }}
      </div>
      <div class="sidebar__content">
        {{ content_for_order_summary }}
      </div>
    </aside>
  </div>
</div>
{{ tracking_code }}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://upsell.conversionbear.com/script/checkout?shop=bareanatomy.myshopify.com"></script>
<script src="https://wallet.d2c.tools/scripts/CAP-widget.js" cid="{{customer.id}}"></script>
</body>

</html>

<script type="text/javascript">
  if(Shopify.Checkout.step == "thank_you"){
    window.VWO = window.VWO || [];
    let total_amount = ($(".payment-due__price").attr('data-checkout-payment-due-target'))/100;
    window._vis_opt_queue = window._vis_opt_queue || [];
    window._vis_opt_queue.push(function() {_vis_opt_revenue_conversion(total_amount);});
    window.VWO.push(['track.revenueConversion', total_amount]);
     
  }
</script>

<script>
  $(document).ready(function () {
    let searchParams = new URLSearchParams(window.location.search);

    $('.logged-in-customer-information__paragraph a').css('display', 'none');
    let discountAppliedDiv = $(".edit_checkout.animate-floating-labels .tag__wrapper .reduction-code span.reduction-code__text");
    if (discountAppliedDiv.length) {
      $(".edit_checkout.animate-floating-labels .tag__wrapper").each(function () {
        if (!$(this).find('.reduction-code .reduction-code__text').length) {
          $(this).find(".tag__button").click();
          localStorage.setItem('coupon_code', "");
          localStorage.removeItem('coupon_code');
        }
      })
    }

    let gift_code = searchParams.get("discount");
    $(".edit_checkout.animate-floating-labels .tag__wrapper").each(function () {
      if (!$(this).find('.reduction-code .reduction-code__text').length && localStorage.getItem('coupon_code') &&
              localStorage.getItem('coupon_code').includes($(this).find('.reduction-code span').first().text().replace(/•|\s+/g,''))
              && gift_code && !gift_code.includes(localStorage.getItem('coupon_code').toLowerCase()) ) {
        $(this).find(".tag__button").click();
        $('.logged-in-customer-information__paragraph a').css('display', 'none');
        localStorage.setItem('coupon_code', "");
        localStorage.removeItem('coupon_code');
      }
    })
    if (Shopify.Checkout.page == 'thank_you') {
      localStorage.setItem('code_applieds', "");
      localStorage.removeItem('code_applieds');
      sessionStorage.setItem("code_applieds", "");
      sessionStorage.removeItem("code_applieds");
      localStorage.setItem('coupon_code', "");
      localStorage.removeItem('coupon_code');
    }
    if (Shopify.Checkout.step == 'contact_information') {
      setInterval(function() {
        if(($('#checkout_shipping_address_phone').val().replace(/\s+/g, "").length !=10 && $('#checkout_shipping_address_phone').val().length != 0) || $('#checkout_shipping_address_phone').val().replace(/\s+/g, "").match(/[a-z]/i)) {
          $('#continue_button').attr('disabled','true').css('background-color','lightgrey');
          if(!$('#error-for-phone-cus').length) {
            $('[data-address-field="phone"]').append('<p class="field__message field__message--error" id="error-for-phone-cus" style="display:block;">Enter a valid phone number</p>');
            $('#checkout_shipping_address_phone').css('border-color','#ff6d6d');
            $('#checkout_shipping_address_phone').css('box-shadow','0 0 0 1px #ff6d6d');

          }
        } else {
          //if(!parseInt(localStorage.getItem('new_flow'))){
          $('#continue_button').removeAttr('disabled').css('background-color','#1990c6');
          //}
          $('#checkout_shipping_address_phone').css('box-shadow','unset');
          $('#checkout_shipping_address_phone').css('border-color','#d9d9d9');
          $('#error-for-phone-cus').remove();
        }
        $('[for="checkout_shipping_address_phone"]').text('Phone (10 digits)');
      }, 100);
    }

    if (Shopify.Checkout.step == 'payment_method') {
      setInterval(function() {
        if(document.getElementById("checkout_different_billing_address_true").checked && ($('#checkout_billing_address_phone').val().replace(/\s+/g, "").length !=10 && $('#checkout_billing_address_phone').val().length != 0) || $('#checkout_billing_address_phone').val().replace(/\s+/g, "").match(/[a-z]/i)) {
          $('#continue_button').attr('disabled','true').css('background-color','lightgrey');
          if(!$('#error-for-phone-cus').length) {
            $('[data-address-field="phone"]').append('<p class="field__message field__message--error" id="error-for-phone-cus" style="display:block;">Enter a valid phone number</p>');
            $('#checkout_billing_address_phone').css('border-color','#ff6d6d');
            $('#checkout_billing_address_phone').css('box-shadow','0 0 0 1px #ff6d6d');

          }
        } else {
          $('#continue_button').removeAttr('disabled').css('background-color','#1990c6');
          $('#checkout_billing_address_phone').css('box-shadow','unset');
          $('#checkout_billing_address_phone').css('border-color','#d9d9d9');
          $('#error-for-phone-cus').remove();
        }
        $('[for="checkout_billing_address_phone"]').text('Phone (10 digits)');
      }, 100);
    }

    {% if customer %}
    webengage.user.login('{{customer.id}}');
    webengage.track("Checkout Page View", {
      "Page Url"          : window.location.href,
      "Gift Id"           : Number(localStorage.getItem('gift_id')) || 0,
      "QuizStateId"       : Number(localStorage.getItem('quizStateId')) || 0,
      "HairQuizStateId"   : Number(localStorage.getItem('hairQuizStateId')) || 0,
      "MenHairQuizStateId": Number(localStorage.getItem('menHairQuizStateId')) || 0
    });
    {% endif %}

    $(".edit_checkout.animate-floating-labels").each(function () {
      if ($(this).attr("data-reduction-form") == "true") {
        sessionStorage.setItem("code_applieds", "yes");
        localStorage.setItem('code_applieds', "yes");

        if (!$(this).find('.reduction-code .reduction-code__text').length) {
          localStorage.setItem("coupon_code", $(this).find('.reduction-code span').first().text().replace(/•|\s+/g,''));
        }

        $("#checkout_reduction_code").attr("disabled", true);
        $("#checkout_reduction_code_mobile").attr("disabled", true);

      }
      else {
        // alert("no");
        sessionStorage.setItem("code_applieds", "no");
        localStorage.setItem('code_applieds', "no");
      }
    });
    setInterval(function () {
      $(".edit_checkout.animate-floating-labels").each(function () {
        if ($(this).attr("data-reduction-form") == "true") {
          sessionStorage.setItem("code_applieds", "yes");
          localStorage.setItem('code_applieds', "yes");

          if (!$(this).find('.reduction-code .reduction-code__text').length) {
            localStorage.setItem("coupon_code", $(this).find('.reduction-code span').first().text().replace(/•|\s+/g,''));
          }

          $("#checkout_reduction_code").attr("disabled", true);
          $("#checkout_reduction_code_mobile").attr("disabled", true);

        }
        else {
          // alert("no");
          sessionStorage.setItem("code_applieds", "no");
          localStorage.setItem('code_applieds', "no");
        }
      });
      $('.logged-in-customer-information__paragraph a').css('display', 'none');
    }, 100);

    $(".edit_checkout.animate-floating-labels .tag__wrapper .tag__button").click(function () {
      $("#checkout_reduction_code").attr("disabled", false);
      $("#checkout_reduction_code_mobile").attr("disabled", false);
      localStorage.setItem('coupon_code', "");
      localStorage.removeItem('coupon_code');
      $('.logged-in-customer-information__paragraph a').css('display', 'none');
    });


    var txt = $(".content-box__row.content-box__row--tight-spacing-vertical .review-block:nth-child(3) .review-block__content").text();
    var price = 1;
    var totalPriceAfterDiscount = price - 1;
    var final = (totalPriceAfterDiscount * 0.20) / 100;
    var pm = (totalPriceAfterDiscount * 0.15) / 100;
    if (txt.includes("Online Payment")) {
      $("#payment_gateway_26649329731_description").closest(".radio-wrapper.content-box__row").css("display", "none");
    }
  });

</script>

<script type="text/javascript">
  function getCookie(cValue) {
    var name = cValue + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) == ' ') c = c.substring(1);
      if (c.indexOf(name) == 0) return c.substring(name.length, c.length);
    }
    return "";
  }

  async function checkAndAddFreeProduct(data){
    // returned false to disable free product
    return false;

    let eligibleForFreeProduct  = false;
    let cartContainsFreeProduct = false;
    let updates                 = false;
    let freeProductVariantId    = 0;
    let freeProducts            = [39328272515118];
    let itemsToRemove           = [];
    let body                    = {};

    if(data.items_subtotal_price/100 > 1600){
      freeProductVariantId = 39328272515118;
      eligibleForFreeProduct = true;
    }

    for (let item of data.items){
      if(eligibleForFreeProduct && item.id == freeProductVariantId){
        cartContainsFreeProduct = true;
      }else if(freeProducts.indexOf(item.id) > -1){
        itemsToRemove.push(item.id)
      }
    }

    for(let variant_id of itemsToRemove){
      body[variant_id] = 0;
      updates =true;
    }

    if(eligibleForFreeProduct && !cartContainsFreeProduct){
      body[freeProductVariantId] = 1;
      updates =true;
    }

    console.log("updates in cart ====++++")
    console.log(updates);

    if(!updates){
      return false;
    }

    await ($.ajax({
      type       : 'POST',
      url        : '/cart/update.js',
      data       : JSON.stringify({updates : body}),
      contentType: 'application/json; charset=utf-8',
      dataType   : 'json',
      success    : function (addToCartResponse) {
        location.reload();
      },
      error : function(request, status, error){
        console.log(request, status, error);
      }
    }));
  }

  function getData(ajaxurl) {
    return $.ajax({
      url: ajaxurl,
      type: 'GET',
      dataType: 'json',
    });
  }

  async function checkFor99StoreProduct(cartItems){
    var value = false;
    for (let item of cartItems.items){
      let product = await getData('/products/' + item.handle + '.js');
      if(typeof product == "string"){
        product = json.parse(product);
      }
      console.log(product);
      if(product.tags.includes("99-store")) {
        value = true;
      }else{
        value = false;
        break;
      }
    }
    return value;
  }

  async function updateQuizInCartAttribute(customer_id){
        let isSkinCare         = false;
        let isHairCare         = false;
        let contains_gift_item = false;
        let attrData           = {
          gift_id           : '',
          gift_order        : '',
          menHairQuizStateId: '',
          hairQuizStateId   : '',
          quizStateId       : '',
        };

        {% for line_item in checkout.line_items %}
          {% if line_item.product.tags contains 'skin-care' %}
            isSkinCare = true;
          {% endif %}

          {% if line_item.product.tags contains 'hair-care' %}
            isHairCare = true;
          {% endif %}

          {% if line_item.product.tags contains 'PERSONALISED GIFT' %}
            contains_gift_item = true;
          {% endif %}
        {%endfor%}


        let menHairQuizStateId = localStorage.getItem("menHairQuizStateId");
        let hairQuizStateId    = localStorage.getItem("hairQuizStateId");
        let quizStateId        = localStorage.getItem("quizStateId");

        if(!contains_gift_item){
          let quizData = await getData(`https://api-quiz.bareanatomy.in/submit/profiles?customer_id=${customer_id}`);
          if(quizData.status == 200){
            for(let quiz of quizData.data.submission){
              if(quiz.quiz_id == 1){
                quizStateId = quiz.quiz_state_id;
                localStorage.setItem("quizStateId", quizStateId);
              }else if(quiz.quiz_id == 2){
                hairQuizStateId = quiz.quiz_state_id;
                localStorage.setItem("hairQuizStateId", hairQuizStateId);
              }else if(quiz.quiz_id == 3){
                menHairQuizStateId = quiz.quiz_state_id;
                localStorage.setItem("menHairQuizStateId", menHairQuizStateId);
              }
            }
          }
        }

        if(isSkinCare){
          attrData['quizStateId'] = quizStateId;
        }

        if(isHairCare){
          let male = false;
          {% for tag in customer.tags %}
            if('{{tag}}'.includes('gender-male')) {
                male = true;
            }
          {% endfor %}

          if(male){
            attrData["menHairQuizStateId"] = menHairQuizStateId;
          } else{
            attrData['hairQuizStateId'] = hairQuizStateId;
          }
        }

        if(contains_gift_item){
          attrData = {
            gift_id           : localStorage.getItem(gift_id),
            gift_order        : true,
            menHairQuizStateId: '',
            hairQuizStateId   : '',
            quizStateId       : ''
          }
        }
    try{
        let result = await $.post('/cart/update.js', {attributes: attrData});
		result = JSON.parse(result);
	    webengage.track("Cart Attributes Updated", result.attributes);
    }catch(error){
    	console.error(error);
    }
		
  }

  $(document).on('page:load page:change', async function () {
    
    $('.order-summary-toggle').removeClass('order-summary-toggle--show').addClass('order-summary-toggle--hide');
    $('.order-summary-toggle').attr('aria-expanded','true');
    $('#order-summary').removeClass('order-summary--is-collapsed').addClass('order-summary--is-expanded');

    var is99Store = true;
    {% for line_item in checkout.line_items %}
      {% unless line_item.product.tags contains '99-store' %}
        is99Store = false;
        {% break %}
      {% endunless %}
    {%endfor%}

    if(is99Store){
      $('input[name="checkout[reduction_code]"]').prop( "disabled", true );
      $(".tag__button").click();
    }

    if(Shopify.Checkout.step == 'contact_information'){
      let searchParams = new URLSearchParams(window.location.search);
      let gift_id = searchParams.get("gift_id");
      Cookies.set('gift_id', gift_id);
    }

    //if(Shopify.Checkout.step == 'contact_information' || Shopify.Checkout.step == 'shipping_method'){
    //  {%if customer %}
    //    await updateQuizInCartAttribute('{{customer.id}}');
    //  {% endif %}
    //}

    if(Shopify.Checkout.step == 'thank_you'){
      localStorage.removeItem('gift_id');
      localStorage.removeItem('is99Store');
      localStorage.removeItem('moneyback');
      localStorage.removeItem('quizStateId');
      localStorage.removeItem('hairQuizStateId');
      localStorage.removeItem('menHairQuizStateId');
    }

    if (Shopify.Checkout.step == 'payment_method' || Shopify.Checkout.step == 'shipping_method') {

      if(Number(getCookie("gift_id")) || is99Store){
        if(Shopify.Checkout.step == 'shipping_method') {
          $(".content-box__row .radio-wrapper").each(function () {
            var gateway_id = $(this).data("shipping-method");
            if (gateway_id.indexOf("Cash") !== -1) {
              $(this).parent('.content-box__row').remove();
            }
          });
        }
        // Removing COD payment method for 99 Store
        if(Shopify.Checkout.step == 'payment_method') {
          $('*[data-select-gateway="26689470531"]').hide();
        }

      }

      var phone_cookkie_val = getCookie('_shopify_sa_p');
      var phonesubstring = 'phoneswitch';
      var cashonsubstring = 'Cash';

      if (phone_cookkie_val.indexOf(phonesubstring) !== -1) {
        if(Shopify.Checkout.step == 'shipping_method') {
          $(".content-box__row .radio-wrapper").each(function () {
            var gateway_id = $(this).data("shipping-method");

            if (gateway_id.indexOf(cashonsubstring) !== -1) {
              $(this).parent('.content-box__row').remove();
            }
          });
        } else {
          $(".section--payment-method .radio-wrapper").each(function () {
            var gateway_id = Checkout.$(this).data("select-gateway");
            if (gateway_id != "26669580355") {

              $(this).remove();
            }
          });

          $('.radio__label__primary').trigger('click');
          $('.step__footer__continue-btn').find('.btn__content').text('Pay');
          $('.radio__label.payment-method-wrapper').find('.radio__label__primary').text('PhonePe');
          $('.radio__label.payment-method-wrapper').find('.radio__label__accessory').remove();
        }
      }
    }
  });

  


 const sendEvent=(res)=>{
    

  const {items}=res;


  let checkoutObj={
    product_type:[],
    product_id:[],
    variant_id:[],
    image:[],
    price:[],
    product_title:[],
    vendor:[],
    url:[],
  }

  for(let i in items)
  {
      for(let j in items[i])
      {
        let arr=Object.keys(checkoutObj)
          if(arr.includes(j))
          {
              checkoutObj[j].push(items[i][j])
          }
      }
  }
{% comment %} 
  console.log(checkoutObj) {% endcomment %}

  {% assign requestId = request.params.id %}

  console.log('{{requestId}}')


  fetch("https://api-automation.bareanatomy.in/api/webEngage/sendEvent", {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      userId   : "" + __st.cid,
      eventName: "Checkout",
      eventData: {
          "Product Type"           : checkoutObj.product_type,
          "Product Id"             : checkoutObj.product_id,
          "Variant Id"             : checkoutObj.variant_id,
          "Product Image"          : checkoutObj.image,
          "Product price"          : checkoutObj.price,
          "Product title"          : checkoutObj.product_title,
          "Product vendor"         : checkoutObj.vendor,
          "Product URL"            : checkoutObj.url
      }
    })
  }).catch(error=>{
    console.log(error);
  });

}


  const fetchCheckOutData=async()=>{

    try{
      let response=await  fetch('/cart.js', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        },
      
      })

        let data= await response.json()
        console.log(data)
          sendEvent(data)

    }
    catch(e)
    {
        console.log(e,'checkout fetch error')
    }





  }


  fetchCheckOutData()


</script>